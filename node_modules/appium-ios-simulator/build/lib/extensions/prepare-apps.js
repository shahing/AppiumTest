"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _appiumSupport = require("appium-support");

var _logger = _interopRequireDefault(require("../logger"));

var _path = _interopRequireDefault(require("path"));

let extensions = {};

extensions.prepareSafari = function () {
  var _ref = (0, _asyncToGenerator2.default)(function* (tmpDir, platformVersion) {
    yield this.prepareBuiltInApp("MobileSafari", tmpDir, platformVersion);
  });

  return function (_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();

extensions.prepareBuiltInApp = function () {
  var _ref2 = (0, _asyncToGenerator2.default)(function* (appName, tmpDir, platformVersion) {
    _logger.default.debug(`Looking for built in app '${appName}'`);

    let newAppPath = _path.default.resolve(tmpDir, `Appium-${appName}-${platformVersion}.app`);

    let stat, appPath;

    try {
      var _ref3 = yield this.getBuiltInApp(appName);

      var _ref4 = (0, _slicedToArray2.default)(_ref3, 2);

      stat = _ref4[0];
      appPath = _ref4[1];
    } catch (err) {
      try {
        stat = yield _appiumSupport.fs.stat(newAppPath);

        if (stat.isDirectory()) {
          _logger.default.debug('Could not find original app, but found the temp ' + 'Appium one so using that: ${}');

          return [newAppPath, appPath];
        }
      } catch (err) {
        _logger.default.warn(`App is also not at '${newAppPath}'`);

        throw new Error(`Could not find built in app '${appName}' in its home ` + `or temp dir!`);
      }
    }

    if (!stat.isDirectory()) {
      throw new Error(`App found but it is not a directory: '${appPath}'`);
    }

    _logger.default.debug(`Found app, trying to move '${appPath}' to tmp dir '${tmpDir}'`);

    yield this.moveBuiltInApp(appName, appPath, newAppPath);
  });

  return function (_x3, _x4, _x5) {
    return _ref2.apply(this, arguments);
  };
}();

extensions.getBuiltInApp = function () {
  var _ref5 = (0, _asyncToGenerator2.default)(function* (appName) {
    let appDir = yield this.getAppDir(appName);

    let appPath = _path.default.resolve(appDir, `${appName}.app`);

    _logger.default.debug(`Found path for '${appName}': ${appPath}`);

    try {
      let stat = yield _appiumSupport.fs.stat(appPath);
      return [stat, appPath];
    } catch (err) {
      if (err && err.message.indexOf('ENOENT') !== -1) {
        _logger.default.errorAndThrow(`App '${appName}' is not at '${appPath}'`);
      }
    }
  });

  return function (_x6) {
    return _ref5.apply(this, arguments);
  };
}();

var _default = extensions;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9leHRlbnNpb25zL3ByZXBhcmUtYXBwcy5qcyJdLCJuYW1lcyI6WyJleHRlbnNpb25zIiwicHJlcGFyZVNhZmFyaSIsInRtcERpciIsInBsYXRmb3JtVmVyc2lvbiIsInByZXBhcmVCdWlsdEluQXBwIiwiYXBwTmFtZSIsImxvZyIsImRlYnVnIiwibmV3QXBwUGF0aCIsInBhdGgiLCJyZXNvbHZlIiwic3RhdCIsImFwcFBhdGgiLCJnZXRCdWlsdEluQXBwIiwiZXJyIiwiZnMiLCJpc0RpcmVjdG9yeSIsIndhcm4iLCJFcnJvciIsIm1vdmVCdWlsdEluQXBwIiwiYXBwRGlyIiwiZ2V0QXBwRGlyIiwibWVzc2FnZSIsImluZGV4T2YiLCJlcnJvckFuZFRocm93Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBR0EsSUFBSUEsVUFBVSxHQUFHLEVBQWpCOztBQUVBQSxVQUFVLENBQUNDLGFBQVg7QUFBQSw2Q0FBMkIsV0FBZ0JDLE1BQWhCLEVBQXdCQyxlQUF4QixFQUF5QztBQUNsRSxVQUFNLEtBQUtDLGlCQUFMLENBQXVCLGNBQXZCLEVBQXVDRixNQUF2QyxFQUErQ0MsZUFBL0MsQ0FBTjtBQUNELEdBRkQ7O0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBSUFILFVBQVUsQ0FBQ0ksaUJBQVg7QUFBQSw4Q0FBK0IsV0FBZ0JDLE9BQWhCLEVBQXlCSCxNQUF6QixFQUFpQ0MsZUFBakMsRUFBa0Q7QUFDL0VHLG9CQUFJQyxLQUFKLENBQVcsNkJBQTRCRixPQUFRLEdBQS9DOztBQUNBLFFBQUlHLFVBQVUsR0FBR0MsY0FBS0MsT0FBTCxDQUFhUixNQUFiLEVBQXNCLFVBQVNHLE9BQVEsSUFBR0YsZUFBZ0IsTUFBMUQsQ0FBakI7O0FBRUEsUUFBSVEsSUFBSixFQUFVQyxPQUFWOztBQUNBLFFBQUk7QUFBQSx3QkFDc0IsS0FBS0MsYUFBTCxDQUFtQlIsT0FBbkIsQ0FEdEI7O0FBQUE7O0FBQ0RNLE1BQUFBLElBREM7QUFDS0MsTUFBQUEsT0FETDtBQUVILEtBRkQsQ0FFRSxPQUFPRSxHQUFQLEVBQVk7QUFDWixVQUFJO0FBQ0ZILFFBQUFBLElBQUksU0FBU0ksa0JBQUdKLElBQUgsQ0FBUUgsVUFBUixDQUFiOztBQUNBLFlBQUlHLElBQUksQ0FBQ0ssV0FBTCxFQUFKLEVBQXdCO0FBQ3RCViwwQkFBSUMsS0FBSixDQUFVLHFEQUNHLCtCQURiOztBQUVBLGlCQUFPLENBQUNDLFVBQUQsRUFBYUksT0FBYixDQUFQO0FBQ0Q7QUFDRixPQVBELENBT0UsT0FBT0UsR0FBUCxFQUFZO0FBQ1pSLHdCQUFJVyxJQUFKLENBQVUsdUJBQXNCVCxVQUFXLEdBQTNDOztBQUNBLGNBQU0sSUFBSVUsS0FBSixDQUFXLGdDQUErQmIsT0FBUSxnQkFBeEMsR0FDQyxjQURYLENBQU47QUFFRDtBQUNGOztBQUVELFFBQUksQ0FBQ00sSUFBSSxDQUFDSyxXQUFMLEVBQUwsRUFBeUI7QUFDdkIsWUFBTSxJQUFJRSxLQUFKLENBQVcseUNBQXdDTixPQUFRLEdBQTNELENBQU47QUFDRDs7QUFFRE4sb0JBQUlDLEtBQUosQ0FBVyw4QkFBNkJLLE9BQVEsaUJBQWdCVixNQUFPLEdBQXZFOztBQUNBLFVBQU0sS0FBS2lCLGNBQUwsQ0FBb0JkLE9BQXBCLEVBQTZCTyxPQUE3QixFQUFzQ0osVUFBdEMsQ0FBTjtBQUNELEdBNUJEOztBQUFBO0FBQUE7QUFBQTtBQUFBOztBQThCQVIsVUFBVSxDQUFDYSxhQUFYO0FBQUEsOENBQTJCLFdBQWdCUixPQUFoQixFQUF5QjtBQUNsRCxRQUFJZSxNQUFNLFNBQVMsS0FBS0MsU0FBTCxDQUFlaEIsT0FBZixDQUFuQjs7QUFDQSxRQUFJTyxPQUFPLEdBQUdILGNBQUtDLE9BQUwsQ0FBYVUsTUFBYixFQUFzQixHQUFFZixPQUFRLE1BQWhDLENBQWQ7O0FBQ0FDLG9CQUFJQyxLQUFKLENBQVcsbUJBQWtCRixPQUFRLE1BQUtPLE9BQVEsRUFBbEQ7O0FBQ0EsUUFBSTtBQUNGLFVBQUlELElBQUksU0FBU0ksa0JBQUdKLElBQUgsQ0FBUUMsT0FBUixDQUFqQjtBQUNBLGFBQU8sQ0FBQ0QsSUFBRCxFQUFPQyxPQUFQLENBQVA7QUFDRCxLQUhELENBR0UsT0FBT0UsR0FBUCxFQUFZO0FBQ1osVUFBSUEsR0FBRyxJQUFJQSxHQUFHLENBQUNRLE9BQUosQ0FBWUMsT0FBWixDQUFvQixRQUFwQixNQUFrQyxDQUFDLENBQTlDLEVBQWlEO0FBQy9DakIsd0JBQUlrQixhQUFKLENBQW1CLFFBQU9uQixPQUFRLGdCQUFlTyxPQUFRLEdBQXpEO0FBQ0Q7QUFDRjtBQUNGLEdBWkQ7O0FBQUE7QUFBQTtBQUFBO0FBQUE7O2VBZWVaLFUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmcyB9IGZyb20gJ2FwcGl1bS1zdXBwb3J0JztcbmltcG9ydCBsb2cgZnJvbSAnLi4vbG9nZ2VyJztcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuXG5cbmxldCBleHRlbnNpb25zID0ge307XG5cbmV4dGVuc2lvbnMucHJlcGFyZVNhZmFyaSA9IGFzeW5jIGZ1bmN0aW9uICh0bXBEaXIsIHBsYXRmb3JtVmVyc2lvbikge1xuICBhd2FpdCB0aGlzLnByZXBhcmVCdWlsdEluQXBwKFwiTW9iaWxlU2FmYXJpXCIsIHRtcERpciwgcGxhdGZvcm1WZXJzaW9uKTtcbn07XG5cbmV4dGVuc2lvbnMucHJlcGFyZUJ1aWx0SW5BcHAgPSBhc3luYyBmdW5jdGlvbiAoYXBwTmFtZSwgdG1wRGlyLCBwbGF0Zm9ybVZlcnNpb24pIHtcbiAgbG9nLmRlYnVnKGBMb29raW5nIGZvciBidWlsdCBpbiBhcHAgJyR7YXBwTmFtZX0nYCk7XG4gIGxldCBuZXdBcHBQYXRoID0gcGF0aC5yZXNvbHZlKHRtcERpciwgYEFwcGl1bS0ke2FwcE5hbWV9LSR7cGxhdGZvcm1WZXJzaW9ufS5hcHBgKTtcblxuICBsZXQgc3RhdCwgYXBwUGF0aDtcbiAgdHJ5IHtcbiAgICBbc3RhdCwgYXBwUGF0aF0gPSBhd2FpdCB0aGlzLmdldEJ1aWx0SW5BcHAoYXBwTmFtZSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIHRyeSB7XG4gICAgICBzdGF0ID0gYXdhaXQgZnMuc3RhdChuZXdBcHBQYXRoKTtcbiAgICAgIGlmIChzdGF0LmlzRGlyZWN0b3J5KCkpIHtcbiAgICAgICAgbG9nLmRlYnVnKCdDb3VsZCBub3QgZmluZCBvcmlnaW5hbCBhcHAsIGJ1dCBmb3VuZCB0aGUgdGVtcCAnICtcbiAgICAgICAgICAgICAgICAgICAgICdBcHBpdW0gb25lIHNvIHVzaW5nIHRoYXQ6ICR7fScpO1xuICAgICAgICByZXR1cm4gW25ld0FwcFBhdGgsIGFwcFBhdGhdO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgbG9nLndhcm4oYEFwcCBpcyBhbHNvIG5vdCBhdCAnJHtuZXdBcHBQYXRofSdgKTtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgQ291bGQgbm90IGZpbmQgYnVpbHQgaW4gYXBwICcke2FwcE5hbWV9JyBpbiBpdHMgaG9tZSBgICtcbiAgICAgICAgICAgICAgICAgICAgICBgb3IgdGVtcCBkaXIhYCk7XG4gICAgfVxuICB9XG5cbiAgaWYgKCFzdGF0LmlzRGlyZWN0b3J5KCkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYEFwcCBmb3VuZCBidXQgaXQgaXMgbm90IGEgZGlyZWN0b3J5OiAnJHthcHBQYXRofSdgKTtcbiAgfVxuXG4gIGxvZy5kZWJ1ZyhgRm91bmQgYXBwLCB0cnlpbmcgdG8gbW92ZSAnJHthcHBQYXRofScgdG8gdG1wIGRpciAnJHt0bXBEaXJ9J2ApO1xuICBhd2FpdCB0aGlzLm1vdmVCdWlsdEluQXBwKGFwcE5hbWUsIGFwcFBhdGgsIG5ld0FwcFBhdGgpO1xufTtcblxuZXh0ZW5zaW9ucy5nZXRCdWlsdEluQXBwID0gYXN5bmMgZnVuY3Rpb24gKGFwcE5hbWUpIHtcbiAgbGV0IGFwcERpciA9IGF3YWl0IHRoaXMuZ2V0QXBwRGlyKGFwcE5hbWUpO1xuICBsZXQgYXBwUGF0aCA9IHBhdGgucmVzb2x2ZShhcHBEaXIsIGAke2FwcE5hbWV9LmFwcGApO1xuICBsb2cuZGVidWcoYEZvdW5kIHBhdGggZm9yICcke2FwcE5hbWV9JzogJHthcHBQYXRofWApO1xuICB0cnkge1xuICAgIGxldCBzdGF0ID0gYXdhaXQgZnMuc3RhdChhcHBQYXRoKTtcbiAgICByZXR1cm4gW3N0YXQsIGFwcFBhdGhdO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICBpZiAoZXJyICYmIGVyci5tZXNzYWdlLmluZGV4T2YoJ0VOT0VOVCcpICE9PSAtMSkge1xuICAgICAgbG9nLmVycm9yQW5kVGhyb3coYEFwcCAnJHthcHBOYW1lfScgaXMgbm90IGF0ICcke2FwcFBhdGh9J2ApO1xuICAgIH1cbiAgfVxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBleHRlbnNpb25zO1xuIl0sImZpbGUiOiJsaWIvZXh0ZW5zaW9ucy9wcmVwYXJlLWFwcHMuanMiLCJzb3VyY2VSb290IjoiLi4vLi4vLi4ifQ==
